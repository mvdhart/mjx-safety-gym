name: Upload Python Package

on:
  push:
    branches:
      - main  # triggers on push to main

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v4

      # 2. Set up Python 3.11
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3. Install build dependencies
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      # 4. Build the package
      - name: Build release distributions
        run: python -m build

      # 5. Upload artifact (optional, keeps same as default)
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build

    steps:
      # 1. Download artifact (optional, keeps default structure)
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      # 2. Publish to PyPI using Twine
      - name: Publish release distributions to PyPI
        env:
          TWINE_USERNAME: __token__                 # fixed username for API token
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}  # your PyPI API token
        run: python -m twine upload dist/*
